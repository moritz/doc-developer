<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<section id="unit-tests">
    <title>Unit Tests</title>
    <para>
OTRS provides unit tests for core modules.
    </para>
    <section id="testing">
        <title>Creating a test file</title>
        <para>
The test files are stored in .t files under /scripts/test/*.t.
For example the file /scripts/test/Calendar.t for the Calendar Module.
        </para>
        <para>
A test file consists of the function call of the function to be tested and the analysis of the return value.
Example (/scripts/test/Calendar.t):
        <programlisting><![CDATA[
# --
# Calendar.t - Calendar
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

use strict;
use warnings;
use utf8;

use vars qw($Self);

use Kernel::System::User;
use Kernel::System::CalendarEvent;

$Self->{UserObject} = Kernel::System::User->new(%{$Self});
$Self->{EventObject} = Kernel::System::CalendarEvent->new(%{$Self}, UserID => 1);


my $EventID = $Self->{EventObject}->EventAdd(
    Title => 'Some Test',
    StartTime => '1977-10-27 20:15',
    EndTime => '1977-10-27 21:00',
    State => 'public',
    UserIDs => [1],
);

$Self->True(
    $EventID,
    'EventAdd()',
);

[..]
        ]]></programlisting>
        </para>
    </section>
    <section>
        <title>Prerequesites for testing</title>
        <para>
To be able to run the unit tests, you need to have all optional Perl modules installed,  except those for different database backends than what you are using. Run bin/otrs.CheckModules.pl to verify your module installation.
        </para>
        <para>
You also need to have an instance of the OTRS web frontend running on the FQDN that is configured in your local OTRS's Config.pm file. This OTRS instance must use the same database that is configured for the unit tests.
        </para>
        <para>
It is advisable to restart the web server before running unit tests, to make sure that the code backing the tests and the web server do not diverge.
        </para>
    </section>
    <section>
        <title>Testing</title>
        <para>
To check your tests, just use "bin/otrs.UnitTest.pl -n Calendar" to use /scripts/test/Calendar.t.
        <programlisting><![CDATA[
shell:/opt/otrs> bin/otrs.UnitTest.pl -n Calendar
+-------------------------------------------------------------------+
/opt/otrs/scripts/test/Calendar.t:
+-------------------------------------------------------------------+
ok 1 - EventAdd()
=====================================================================
Product:   OTRS 3.2.x git
Test Time: 0 s
Time:      2010-04-02 12:58:37
Host:      yourhost.example.com
Perl:      5.8.9
OS:        linux
TestOk:    1
TestNotOk: 0
=====================================================================
shell:/opt/otrs>
        ]]></programlisting>
        </para>
    </section>
    <section>
        <title>True()</title>
        <para>
This function tests whether the return value of the function 'EventAdd()' in the variable $EventID is valid.
        <programlisting><![CDATA[
$Self->True(
    $EventID,
    'EventAdd()',
);
        ]]></programlisting>
        </para>
    </section>
    <section>
        <title>False()</title>
        <para>
This function tests whether the return value of the function 'EventAdd()' in the variable $EventID is invalid.
        <programlisting><![CDATA[
$Self->False(
    $EventID,
    'EventAdd()',
);
        ]]></programlisting>
        </para>
    </section>
    <section>
        <title>Is()</title>
        <para>
This function tests whether the variables $A and $B are equal.
        <programlisting><![CDATA[
$Self->Is(
    $A,
    $B,
    'Test Name',
);
        ]]></programlisting>
        </para>
    </section>
</section>
